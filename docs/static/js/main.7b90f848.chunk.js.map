{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/Footer.js","GifExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","Footer","href","GifExpertApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBfG,YAAY,qC,+BC1BfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEoCC,UAAWH,GAF/C,6BACJ,oCADI,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCwBLO,EArBO,SAAEf,GACpB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACPpB,EAASC,GACJoB,MAAM,SAAAC,GAEHH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAAChB,IAEGiB,GCRIK,EAVK,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,sBAAKqB,UAAU,yCAAf,UACI,qBAAKC,IAAMtB,EAAMuB,IAAMb,IACvB,kCAAMA,EAAN,WCuBGc,EA1BC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAEf,EAAgCe,EAAcf,GAAjCa,EAAb,EAAON,KAAcS,EAArB,EAAqBA,QAErB,OACI,sBAAKO,UAAU,kBAAf,UACI,qBAAIA,UAAU,8CAAd,cAA8DvB,EAA9D,OAECgB,GAAW,mBAAGO,UAAU,2CAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGQV,EAAOJ,KAAK,SAAAC,GACZ,OAAO,cAAC,EAAD,eAEMA,GADCA,EAAIC,aCHvBgB,EAdA,WACX,OACI,mCACI,oBAAGJ,UAAU,SAAb,oBACI,mBAAGK,KAAK,+CAA+CL,UAAU,OAAjE,qBAEA,mBAAGK,KAAK,2CAAR,SACI,mBAAGL,UAAU,sCCyBlBM,EA5BM,WAEjB,MAAoC5C,mBAAS,CAAC,mBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,6DACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEKS,EAAWgB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAWA,GADLA,QAOnB,cAAC,EAAD,QChBI8B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAE,EAAF,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.7b90f848.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 1){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n                placeholder=\"Enter your favourites GIFs...\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async( category ) => {\r\n    const APIKey = \"o2jFEQeA5I0nwBWGLDuFJf2uKY2Zi1m8\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${APIKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n            \r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n    \r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    \r\n    const {data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <h3 className=\"animate__animated animate__fadeIn gif-title\"> {category} </h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash loading\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img => {\r\n                    return <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <p className=\"footer\">Made by \r\n                <a href=\"https://www.linkedin.com/in/ramiro-tanquias/\" className=\"link\"> Ramiro\r\n                </a> \r\n                <a href=\"https://github.com/ramatc/gif-expert-app\">\r\n                    <i className=\"fab fa-github icon-github\"></i>\r\n                </a>\r\n            </p> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nimport Footer from './components/Footer';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"Rick and Morty\"]);\r\n    \r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <h2>Search Your Favourites GIFs</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ul>\r\n             {\r\n                 categories.map( category =>  \r\n                    <GifGrid \r\n                        key= {category}\r\n                        category= {category}\r\n                    />\r\n                 )\r\n             }\r\n            </ul>\r\n\r\n           <Footer/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    < GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}